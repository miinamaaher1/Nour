@using Microsoft.AspNetCore.Identity
@using XCourse.Infrastructure.Repositories.Interfaces
@model Group
@inject UserManager<AppUser> UserManager
@inject IUnitOfWork unitOfWork

@{
    ViewData["Title"] = "Group Details";
    var user = UserManager.GetUserAsync(User).Result;
    var stud = unitOfWork.Students.Find(s => s.AppUserID == user.Id);
}

<div class="card mb-3 mx-auto" style="max-width: 800px">
    <div style="width: 100%; height: 300px; overflow:hidden">
        @if (Model.CoverPicture != null)
        {
            <img alt="cover" class="card-img-top"
            src="data:image/*;base64,@(Convert.ToBase64String(Model.CoverPicture))" />
        }
        else
        {
            <img alt="cover" class="card-img-top"
            src="~/images/default_cover.png" />
        }
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-8">
                <h1 class="card-title">@Model.Subject.Topic</h1>
                <h6 class="card-subtitle">@Model.Subject.Year - @Model.Subject.Semester - @Model.Subject.Major</h6>
                @if (Model.IsOnline)
                {
                    <i class="fa-solid fa-globe" style="color: lightgreen"></i>
                }
                @if (Model.IsGirlsOnly)
                {
                    <i class="fa-solid fa-child-dress" style="color: pink"></i>
                }
            </div>
            <div class="col-4">
                <div class="card" style="width: 100%;">
                    @if (Model.Teacher.AppUser.ProfilePicture != null)
                    {
                        <img alt="profile" class="card-img-top"
                        src="data:image/*;base64,@(Convert.ToBase64String(Model.Teacher.AppUser.ProfilePicture))" />
                    }
                    else
                    {
                        <img alt="profile" class="card-img-top"
                        src="~/images/default_profile.png" />
                    }
                    <div class="card-body">
                        <h5 class="card-title">@Model.Teacher.AppUser.FirstName @Model.Teacher.AppUser.LastName</h5>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <p class="card-text">Seats Available: @(Model.MaxStudents - Model.CurrentStudents) / @Model.MaxStudents</p>
                <div class="progress" role="progressbar" aria-label="reserved seats" aria-valuenow="@(((double)Model.CurrentStudents / @Model.MaxStudents)*100)" aria-valuemin="0" aria-valuemax="100">
                    <div class="progress-bar" style="width: @(((double)Model.CurrentStudents / @Model.MaxStudents) * 100)%"></div>
                </div>
                <p class="card-text">Session Price: L.E. @Model.PricePerSession</p>
                <p class="card-text">Default Times:</p>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Day</th>
                            <th scope="col">Time</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ var i = 1; }
                        @foreach (var time in Model.GroupDefaults)
                        {
                            <tr>
                                <th scope="row">@i</th>
                                <td>@time.WeekDay</td>
                                <td>@time.StartTime</td>
                            </tr>
                            i++;
                        }
                    </tbody>
                </table>
                <form asp-area="Students" asp-controller="Group" asp-action="Enroll" method="post">
                    <input type="hidden" name="groupID" value="@Model.ID" />
                    <input type="hidden" name="studentID" value="@stud.ID" />
                    <button type="submit" class="btn btn-primary @(Model.IsGirlsOnly && (user.Gender == Gender.Male) ? "disabled" : "")"
                    @(Model.IsGirlsOnly && (user.Gender == Gender.Male) ? "disabled" : "")>
                        Enroll
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>
