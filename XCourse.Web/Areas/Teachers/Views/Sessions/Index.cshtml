@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Teachers/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <style>
        /* Calendar Loading Overlay */
        .calendar-loading-overlay {
            position: absolute;
            top: 60px; /* Matches your calendar-controls height */
            left: 0;
            right: 0;
            bottom: 0;
            background-color: var(--clr-surface);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .loading-message {
            margin-top: 20px;
            font-size: 18px;
            color: var(--clr-primary);
            text-align: center;
        }

        /* Calendar Grid Animation */
        .calendar-grid-loader {
            width: 200px;
            height: 200px;
            position: relative;
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            grid-template-rows: repeat(6, 1fr);
            gap: 4px;
        }

        .calendar-cell {
            background-color: var(--clr-border);
            border-radius: 4px;
            opacity: 0.2;
            animation: pulse-fade 2s infinite;
        }

            /* Create highlight effects on cells */
            .calendar-cell:nth-child(7n+1) {
                animation-delay: 0.1s;
            }

            .calendar-cell:nth-child(7n+2) {
                animation-delay: 0.2s;
            }

            .calendar-cell:nth-child(7n+3) {
                animation-delay: 0.3s;
            }

            .calendar-cell:nth-child(7n+4) {
                animation-delay: 0.4s;
            }

            .calendar-cell:nth-child(7n+5) {
                animation-delay: 0.5s;
            }

            .calendar-cell:nth-child(7n+6) {
                animation-delay: 0.6s;
            }

            .calendar-cell:nth-child(7n) {
                animation-delay: 0.7s;
            }

            /* Special highlighted "today" cell */
            .calendar-cell:nth-child(17) {
                background-color: var(--clr-accent);
                opacity: 0.6;
                animation: pulse-today 2s infinite;
            }

        /* Calendar event animations */
        .calendar-event {
            position: absolute;
            height: 16px;
            border-radius: 3px;
            background-color: var(--clr-primary);
            opacity: 0.7;
            animation: slide-in 3s infinite;
        }

            .calendar-event:nth-child(43) {
                top: 40%;
                left: 20%;
                width: 30%;
                animation-delay: 0.5s;
            }

            .calendar-event:nth-child(44) {
                top: 60%;
                left: 50%;
                width: 25%;
                background-color: var(--clr-secondary);
                animation-delay: 1s;
            }

            .calendar-event:nth-child(45) {
                top: 20%;
                left: 60%;
                width: 20%;
                background-color: var(--clr-accent);
                animation-delay: 1.5s;
            }

        /* Clock spinner animation */
        .calendar-clock {
            position: absolute;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            border: 3px solid var(--clr-border);
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        .clock-hand {
            position: absolute;
            width: 2px;
            height: 20px;
            background-color: var(--clr-primary);
            top: 50%;
            left: 50%;
            transform-origin: bottom center;
            animation: rotate 2s linear infinite;
        }

            .clock-hand:nth-child(2) {
                height: 15px;
                width: 3px;
                background-color: var(--clr-secondary);
                animation: rotate 12s linear infinite;
            }

        @@keyframes pulse-fade {
            0%, 100%

        {
            opacity: 0.2;
        }

        50% {
            opacity: 0.5;
        }

        }

        @@keyframes pulse-today {
            0%, 100%

        {
            opacity: 0.6;
        }

        50% {
            opacity: 1;
        }

        }

        @@keyframes slide-in {
            0%

        {
            transform: translateX(-10px);
            opacity: 0.3;
        }

        50% {
            transform: translateX(0);
            opacity: 0.7;
        }

        100% {
            transform: translateX(-10px);
            opacity: 0.3;
        }

        }

        @@keyframes rotate {
            0%

        {
            transform: translate(-50%, 0) rotate(0deg);
        }

        100% {
            transform: translate(-50%, 0) rotate(360deg);
        }

        }

        /* Loading dots */
        .loading-dots {
            display: flex;
            margin-top: 10px;
        }

            .loading-dots .dot {
                width: 10px;
                height: 10px;
                margin: 0 5px;
                border-radius: 50%;
                background-color: var(--clr-primary);
                animation: dots-fade 1.5s infinite ease-in-out;
            }

                .loading-dots .dot:nth-child(1) {
                    animation-delay: 0s;
                }

                .loading-dots .dot:nth-child(2) {
                    animation-delay: 0.3s;
                }

                .loading-dots .dot:nth-child(3) {
                    animation-delay: 0.6s;
                }

        @@keyframes dots-fade {
            0%, 100%

        {
            opacity: 0.3;
            transform: scale(0.8);
        }

        50% {
            opacity: 1;
            transform: scale(1);
        }

        }

        /* Calendar Controls Styling - copied from your CSS */
        .calendar-controls {
            padding: 10px 20px;
            background-color: var(--clr-surface);
            border-bottom: 1px solid var(--clr-border);
            display: flex;
            align-items: center;
            gap: 15px;
            flex-wrap: wrap;
            height: 60px; /* Fixed height for controls */
            box-sizing: border-box;
        }

            .calendar-controls button {
                background-color: var(--clr-primary);
                color: var(--clr-text-on-primary);
                border: none;
                padding: 8px 12px;
                border-radius: 4px;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }

                .calendar-controls button:hover {
                    background-color: var(--clr-secondary);
                }

        #current-range {
            font-weight: bold;
            color: var(--clr-primary);
        }

        /* Calendar Container */
        #calendar {
            height: calc(100vh - 60px); /* Adjust height based on controls */
            border: 1px solid var(--clr-border);
            position: relative;
        }

        /* Error message styling */
        .calendar-error {
            display: none;
            text-align: center;
            padding: 20px;
            background-color: rgba(220, 53, 69, 0.1);
            border: 1px solid #dc3545;
            border-radius: 4px;
            color: #dc3545;
            margin: 20px;
        }

            .calendar-error code {
                display: block;
                margin-top: 10px;
                background-color: rgba(0,0,0,0.05);
                padding: 10px;
                border-radius: 4px;
                white-space: pre-wrap;
                text-align: left;
                font-size: 14px;
            }

            .calendar-error button {
                margin-top: 15px;
                background-color: #dc3545;
                color: white;
                border: none;
                padding: 8px 16px;
                border-radius: 4px;
                cursor: pointer;
            }
    </style>
}

<h1>Index</h1>
<div class="col-12">
    <div class="container">
        <div class="calendar-controls">
            <button id="prevBtn"><i class="fas fa-chevron-left"></i></button>
            <button id="nextBtn"><i class="fas fa-chevron-right"></i></button>
            <button id="todayBtn">Today</button>
            <span id="current-range"></span>
            <div style="margin-left: auto;">
                <button id="viewDayBtn">Day</button>
                <button id="viewWeekBtn">Week</button>
                <button id="viewMonthBtn">Month</button>
            </div>
        </div>

        <div id="calendar">
            <!-- Loading overlay -->
            <div class="calendar-loading-overlay" id="calendarLoadingOverlay">
                <div class="calendar-grid-loader">
                    <!-- Generate 42 cells (6 rows x 7 days) -->
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>
                    <div class="calendar-cell"></div>

                    <!-- Calendar events -->
                    <div class="calendar-event"></div>
                    <div class="calendar-event"></div>
                    <div class="calendar-event"></div>

                    <!-- Clock spinner -->
                    <div class="calendar-clock">
                        <div class="clock-hand"></div>
                        <div class="clock-hand"></div>
                    </div>
                </div>

                <div class="loading-message">
                    Loading Calendar
                    <div class="loading-dots">
                        <div class="dot"></div>
                        <div class="dot"></div>
                        <div class="dot"></div>
                    </div>
                </div>
            </div>

            <!-- Error message that appears if calendar fails to load -->
            <div class="calendar-error" id="calendarError">
                <h3>⚠️ Calendar Loading Error</h3>
                <p>
                    There was an error initializing the calendar. The TUI Calendar library may not be
                    properly loaded.
                </p>
                <code id="errorDetails">toastui is not defined</code>
                <p>Make sure you've included the TUI Calendar library in your HTML:</p>
                <code>&lt;script src="https://uicdn.toast.com/calendar/v2.1.0/toastui-calendar.min.js"&gt;&lt;/script&gt;</code>
                <button onclick="window.location.reload()">Try Again</button>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    <script src="~/Scripts/tui-calendar.min.js"></script>
      <script>
                         document.addEventListener('DOMContentLoaded', function () {
            const loadingOverlay = document.getElementById('calendarLoadingOverlay');
            const errorMessage = document.getElementById('calendarError');
            const errorDetails = document.getElementById('errorDetails');
            const calendarContainer = document.getElementById('calendar'); // Get the calendar container element

            // Check if the necessary elements exist
            if (!loadingOverlay || !errorMessage || !errorDetails || !calendarContainer) {
                console.error('One or more required HTML elements (calendarLoadingOverlay, calendarError, errorDetails, calendar) are missing.');
                // Optionally display a general error message to the user
                if (errorMessage) {
                    errorMessage.textContent = 'Error: Required page elements are missing.';
                    errorMessage.style.display = 'block';
                }
                if(loadingOverlay) {
                    loadingOverlay.style.display = 'none'; // Hide loading if elements are missing
                }
                return; // Stop execution if essential elements are not found
            }

            // Check if the TUI Calendar library is loaded correctly
            // The library exposes itself as tui.Calendar
            if (typeof tui === 'undefined' || typeof tui.Calendar !== 'function') {
                console.error('TUI Calendar library (tui.Calendar) not found. Make sure the library script is included correctly before this script.');
                // Show error message
                loadingOverlay.style.display = 'none';
                errorMessage.style.display = 'block';
                errorDetails.textContent = 'TUI Calendar library failed to load.';
            } else {
                console.log('TUI Calendar library detected. Initializing...');
                initializeCalendar();
            }

            function initializeCalendar() {
                try {
                    // Use the correct global object: tui.Calendar
                    var Calendar = tui.Calendar;
                    var calendar = new Calendar(calendarContainer, { // Pass the container element directly
                        defaultView: 'week',
                        useCreationPopup: true, // Example options - enable default popups
                        useDetailPopup: true,   // Example options - enable default popups
                        // taskView: true, // 'taskView' might be deprecated or need specific setup depending on version. Check docs.
                        // scheduleView: true // 'scheduleView' might be deprecated or need specific setup depending on version. Check docs.
                        // Add other necessary calendar options here based on v1.15.3 documentation
                        // e.g., template: { ... }, month: { ... }, week: { ... }
                    });

                    console.log('TUI Calendar initialized successfully.');

                    // Hide loading overlay
                    loadingOverlay.style.display = 'none';

                    // --- Optional: Example Event Listeners ---
                    calendar.on('clickSchedule', function(event) {
                        console.log('clickSchedule', event);
                        // var schedule = event.schedule;
                        // You can access schedule details here
                    });

                     calendar.on('beforeCreateSchedule', function(event) {
                        console.log('beforeCreateSchedule', event);
                        // You can modify event data here before creation
                        // e.g., event.guide.clear(); // Clear default guide elements if needed

                        // Example: Create a schedule manually based on the event data
                        // const scheduleData = {
                        //     id: String(Date.now()),
                        //     calendarId: '1', // Make sure this calendarId exists if using calendars option
                        //     title: event.title || 'New Event',
                        //     category: 'time',
                        //     start: event.start,
                        //     end: event.end,
                        //     isAllDay: event.isAllDay
                        // };
                        // calendar.createSchedules([scheduleData]);
                     });

                    calendar.on('beforeUpdateSchedule', function(event) {
                        console.log('beforeUpdateSchedule', event);
                        // var schedule = event.schedule;
                        // var changes = event.changes;
                        // calendar.updateSchedule(schedule.id, schedule.calendarId, changes);
                    });

                    calendar.on('beforeDeleteSchedule', function(event) {
                         console.log('beforeDeleteSchedule', event);
                        // var schedule = event.schedule;
                        // calendar.deleteSchedule(schedule.id, schedule.calendarId);
                    });
                    // --- End Optional Examples ---

                } catch (error) {
                    console.error('Calendar Initialization Error:', error);
                    errorDetails.textContent = error.message + (error.stack ? '\n' + error.stack : ''); // Include stack trace if available
                    errorMessage.style.display = 'block';
                    loadingOverlay.style.display = 'none'; // Ensure loading is hidden on error
                }
            }

            // General error listener (optional but helpful for debugging)
            window.addEventListener('error', function (event) {
                console.error('Unhandled Globl Error caught:', event.error);
                // Avoid showing the specific calendar error again if it was already handled
                if (errorMessage.style.display !== 'block') {
                    errorDetails.textContent = 'An unexpected error occurred: ' + (event.error ? event.error.message : event.message);
                    errorMessage.style.display = 'block';
                    loadingOverlay.style.display = 'none';
                }
            });
        });
      </script>
}