@model IEnumerable<XCourse.Core.ViewModels.AssistantViewModels.GroupVM>


@{
    ViewData["Title"] = "Accessed Groups";
}


@section Styles{
    @* <link rel="stylesheet" href="~/css/Assistants/AcceptedGroups.css"> *@
    <link rel="stylesheet" href="~/css/Students/RecommendedGroups.css" />

}

<div class="container col-11">
    <!-- Search -->

    <div class="col-12 row">
        <div class="col-3"></div>
        <div class="col-lg-6 col-12">
            <div class="search-container">
                <input class="search" id="sessionSearch" placeholder="Search..." />
                <i class="fas fa-search"></i>
            </div>
        </div>
        <div class="col-3"></div>
    </div>

    <!-- Card Grid -->
    <div class="row" id="groupCardsContainer">
        @foreach (var group in Model)
        {
            <div class="col-md-3 mb-4 group-card-wrapper">
                <a class="group-card" asp-action="Details" asp-controller="Group" asp-area="Assistants" asp-route-Id="@group.GroupID">
                    <div class="group-card__image">
                        <img src="@(group.GroupPicture != null ? "data:image/*;base64," + Convert.ToBase64String(group.GroupPicture) : Url.Content("~/images/default_Group.jpg"))"
                             alt="@group.Subject Group">
                        <div class="group-card__teacher">
                            <div class="group-card__teacher-img">
                                <img src="@(group.TeacherPicture != null ? "data:image/*;base64," + Convert.ToBase64String(group.TeacherPicture) : Url.Content("~/images/default_profile.png"))"
                                     alt="@group.TeacherName">
                            </div>
                        </div>
                    </div>
                    <div class="group-card__content">
                        <div class="group-card__title">@group.TeacherName</div>
                        <div class="group-card__subject">@group.Subject?.Topic</div>
                        <div class="group-card__features">
                            @if (group.IsOnline)
                            {
                                <span class="group-card__feature">
                                    <i class="fas fa-laptop"></i> Online
                                </span>
                            }
                            else
                            {
                                <span class="group-card__feature">
                                    <i class="fas fa-building"></i> Offline
                                </span>
                            }
                            @if (group.IsGirlsOnly)
                            {
                                <span class="group-card__feature">
                                    <i class="fas fa-female"></i> Girls Only
                                </span>
                            }
                        </div>
                        <div class="group-card__footer">
                            <div class="group-card__days">@group.DefaultSessionDays</div>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('sessionSearch').addEventListener('keyup', function () {
            const searchQuery = this.value.toLowerCase();
            const cards = document.querySelectorAll('#groupCardsContainer .group-card-wrapper');

            let matchFound = false;

            cards.forEach(card => {
                const teacherName = card.querySelector('.group-card__title')?.textContent.toLowerCase() || '';
                const subjectName = card.querySelector('.group-card__subject')?.textContent.toLowerCase() || '';
                const isOnline = card.querySelector('.group-card__feature')?.textContent.toLowerCase() || '';
                const days = card.querySelector('.group-card__days')?.textContent.toLowerCase() || '';

                const isVisible = teacherName.includes(searchQuery) || subjectName.includes(searchQuery)|| isOnline.includes(searchQuery) || days.includes(searchQuery);

                card.style.display = isVisible ? 'block' : 'none';

                if (isVisible) {
                    matchFound = true;
                }
            });

            // Optional: Add empty state message
            if (!matchFound) {
                if (!document.getElementById('emptyMessage')) {
                    const emptyMsg = document.createElement('div');
                    emptyMsg.id = 'emptyMessage';
                    emptyMsg.textContent = 'No matching groups found.';
                    emptyMsg.style.textAlign = 'center';
                    emptyMsg.style.color = 'var(--clr-text-secondary)';
                    emptyMsg.style.marginTop = '20px';
                    document.getElementById('groupCardsContainer').appendChild(emptyMsg);
                }
            } else {
                const emptyMsg = document.getElementById('emptyMessage');
                if (emptyMsg) {
                    emptyMsg.remove();
                }
            }
        });
    </script>
}               