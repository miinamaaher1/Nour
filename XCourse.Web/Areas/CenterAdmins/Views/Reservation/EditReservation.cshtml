@model XCourse.Core.ViewModels.CenterAdminViewModels.EditRoomReservation

@{
    ViewData["Title"] = "Edit";
}



<h4>Edit Reservation</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditReservation">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input type="hidden" asp-for="ID" />

            <div>

                @if (Model.PreviewPicture!= null)
                {
                    <img style="border-radius: 50%; width: 250px; height: 250px; object-fit: cover; alt="profile" src="data:image/*;base64,@(Convert.ToBase64String(Model.PreviewPicture))" />
                }
                else
                {
                    <img alt="profile" src="~/images/RoomProfile.webp" style="border-radius: 50%; width: 250px; height: 250px; object-fit: cover;" />
                }

            </div>
            
            <div class="form-group">
                <label>Current Room</label>
                <input type="text" class="form-control" asp-for="@Model.RoomName" readonly />
            </div>
            <div class="form-group">
                <label asp-for="RoomID" class="control-label">Available Rooms</label>
                <select asp-for="RoomID" asp-items="@(new SelectList(Model.Rooms, "RoomID", "RoomName"))"
                        class="form-control"></select>
                <span asp-validation-for="RoomID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
