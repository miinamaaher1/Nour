@model XCourse.Core.ViewModels.CenterAdminViewModels.CreateCenterViewModel


@{
    ViewData["Title"] = "Create";
    List<SelectListItem> governorates = new List<SelectListItem>
{
    new SelectListItem { Value = "Cairo", Text = "Cairo" },
    new SelectListItem { Value = "Giza", Text = "Giza" },
    new SelectListItem { Value = "Alexandria", Text = "Alexandria" },
    new SelectListItem { Value = "Dakahlia", Text = "Dakahlia" },
    new SelectListItem { Value = "RedSea", Text = "Red Sea" },
    new SelectListItem { Value = "Beheira", Text = "Beheira" },
    new SelectListItem { Value = "Fayoum", Text = "Fayoum" },
    new SelectListItem { Value = "Gharbia", Text = "Gharbia" },
    new SelectListItem { Value = "Ismailia", Text = "Ismailia" },
    new SelectListItem { Value = "Menofia", Text = "Menofia" },
    new SelectListItem { Value = "Minya", Text = "Minya" },
    new SelectListItem { Value = "Qaliubia", Text = "Qaliubia" },
    new SelectListItem { Value = "NewValley", Text = "New Valley" },
    new SelectListItem { Value = "Suez", Text = "Suez" },
    new SelectListItem { Value = "Aswan", Text = "Aswan" },
    new SelectListItem { Value = "Assiut", Text = "Assiut" },
    new SelectListItem { Value = "BeniSuef", Text = "Beni Suef" },
    new SelectListItem { Value = "PortSaid", Text = "Port Said" },
    new SelectListItem { Value = "Damietta", Text = "Damietta" },
    new SelectListItem { Value = "Sharkia", Text = "Sharkia" },
    new SelectListItem { Value = "SouthSinai", Text = "South Sinai" },
    new SelectListItem { Value = "KafrElSheikh", Text = "Kafr El Sheikh" },
    new SelectListItem { Value = "Matrouh", Text = "Matrouh" },
    new SelectListItem { Value = "Luxor", Text = "Luxor" },
    new SelectListItem { Value = "Qena", Text = "Qena" },
    new SelectListItem { Value = "NorthSinai", Text = "North Sinai" },
    new SelectListItem { Value = "Sohag", Text = "Sohag" }
};

}
<h1 class="align-items-center text-success">Edit Center</h1>

<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Edit" enctype="multipart/form-data" class="form-control container p-4 bg-light rounded shadow">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="CenterAdminid" hidden class="form-control" />
                <span asp-validation-for="CenterAdminid" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="CenterID" hidden class="form-control" />
                <span asp-validation-for="CenterID" class="text-danger"></span>
            </div>
            <div class="form-group m-4 row justify-content-around">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
           
            <div class="form-group m-4 row justify-content-around form-check" >
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsGirlsOnly" /> @Html.DisplayNameFor(model => model.IsGirlsOnly)
                </label>
            </div>
            <div class="form-group m-4 row justify-content-around ">
            <label asp-for="Address.City" class="control-label"></label>
            <input asp-for="Address.City" class="form-control" />

    </div>
    <div class="form-group m-4 row justify-content-around ">
        <label asp-for="Address.Neighborhood" class="control-label"></label>
        <input class="form-control" asp-for="Address.Neighborhood" />

    </div>

    <div class="form-group m-4 row justify-content-around ">
        <label asp-for="Address.Street" class="control-label"></label>
        <input class="form-control" asp-for="Address.Street" />

    </div>
    <div class="form-group m-4 row justify-content-around ">
        <label asp-for="Address.Governorate" class="control-label"></label>
        <select asp-items="@governorates" class="form-control" asp-for="Address.Governorate"></select>

    </div>
    <div class="form-group m-4 row justify-content-around" style="text-align: center">
        @if (Model.PreviewPicture != null)
        {
            <img id="PreviewPicture" alt="profile" style="border-radius: 50%; width: 250px; height: 250px; object-fit: cover;"
                 src="data:image/*;base64,@(Convert.ToBase64String(Model.PreviewPicture))" />
        }
        else
        {
            <img id="PreviewPicture" alt="profile" style="border-radius: 50%; width: 250px; height: 250px; object-fit: cover;"
                         src="~/images/CenterProfile.jpg" />
        }
        <div class="custom-file mt-2">
            <input type="file"
                   accept="image/*"
                   name="img"
                   class="form-control"
                   onchange="document.getElementById('PreviewPicture').src = window.URL.createObjectURL(this.files[0])" />
        </div>
    </div>

    <div class="form-group m-4 row justify-content-around">

        <div id="googleMap" style="height:300px;width:100%;"></div>
        <input type="hidden" id="lat" asp-for="Location.OriginY" />
        <input type="hidden" id="lng" asp-for="Location.OriginX" />
        <input type="hidden" asp-for="Location.Key" />

        <script>
            function initMap() {
                var lat = @Model.Location.OriginY;
                var lng = @Model.Location.OriginX;

                if (lat == 0 || lng == 0) {
                    lat = 30.0444;
                    lng = 31.2357;

                }

                var myCenter = new google.maps.LatLng(lat, lng);
                var mapProp = {
                    center: myCenter,
                    zoom: 12,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };

                var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);

                var marker = new google.maps.Marker({
                    position: myCenter,
                    map: map,
                    draggable: true
                });

                google.maps.event.addListener(map, "click", function (event) {
                    marker.setPosition(event.latLng);
                    updateLatLngInputs(event.latLng);
                });

                marker.addListener("dragend", function () {
                    updateLatLngInputs(marker.getPosition());
                });

                function updateLatLngInputs(location) {
                    document.getElementById("lat").value = location.lat();
                    document.getElementById("lng").value = location.lng();
                }
            }
        </script>

        <script src="https://maps.googleapis.com/maps/api/js?key=@Model.Location.Key&callback=initMap" defer></script>

    </div>

            <div class="form-group  m-4 row justify-content-around">
                <input type="submit" value="Edit" class="btn btn-outline-success" />
                <a asp-action="Index" class="btn btn-outline-success">Back to List</a>
            </div>
        </form>
    </div>
</div>

<div>
 
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
