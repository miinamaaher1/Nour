@model XCourse.Core.ViewModels.CenterAdminViewModels.IndexHomeViewModel

@{
    ViewData["Title"] = "Admin Dashboard";
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.1/chart.min.js"></script>
    <script>
        $(document).ready(function () {
            // Top Centers Chart
            var chartData = @Html.Raw(Json.Serialize(Model.topCenterViews));
            // Sort data by TotalBookings in descending order
            chartData.sort(function(a, b) {
                return b.totalBookings - a.totalBookings;
            });
            var ctx = document.getElementById('topCentersChart').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: chartData.map(function(item) { return item.centerName; }),
                    datasets: [{
                        label: 'Total Reservations',
                        data: chartData.map(function(item) { return item.totalBookings; }),
                        backgroundColor: 'rgba(54, 162, 235, 0.7)'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            labels: {
                                color: 'gray' // Set the legend label color
                            }
                        }
                    },
                    scales: {
                        x: {
                            grid: {
                                color: 'gray' // light gray for horizontal grid lines
                            },
                            ticks: {
                                color: 'gray' // optional: to change tick label color
                            }
                        },
                        y: {
                            grid: {
                                color: 'gray' // light gray for vertical grid lines
                            },
                            ticks: {
                                color: 'gray'
                            }
                        }
                    }
                }
            });

            // Room Occupancy Cards
            var roomData = @Html.Raw(Json.Serialize(Model.roomHomeViewModels));
            const cardsContainer = document.getElementById('centerCards');

            roomData.forEach(center => {
                const occupancyRate = center.totalRooms > 0
                    ? Math.round((center.bookedRooms / center.totalRooms) * 100)
                    : 0;
                const card = document.createElement('div');
                card.className = 'center-card';

                // Determine color based on occupancy rate
                let color;
                if (occupancyRate > 80) color = '#ef4444'; // Red - high occupancy
                else if (occupancyRate > 60) color = '#f59e0b'; // Orange - medium occupancy
                else color = '#10b981'; // Green - low occupancy

                card.innerHTML = `
                    <div class="center-name">${center.centerName}</div>
                    <div class="occupancy-rate" style="color: ${color}">${occupancyRate}%</div>
                    <div class="progress-bar">
                        <div class="progress-fill" style="width: ${occupancyRate}%; background-color: ${color};"></div>
                    </div>
                    <div class="room-counts">
                        <div class="room-count">
                            <div class="count-value">${center.bookedRooms}</div>
                            <div class="count-label">Booked</div>
                        </div>
                        <div class="room-count">
                            <div class="count-value">${center.availableRooms}</div>
                            <div class="count-label">Available</div>
                        </div>
                        <div class="room-count">
                            <div class="count-value">${center.totalRooms}</div>
                            <div class="count-label">Total</div>
                        </div>
                    </div>
                `;

                cardsContainer.appendChild(card);
            });
        });
    </script>
}

<div class="col-12">
    <div class="dashboard-container">
        <div class="welcome-card">
            <h2>Welcome Back, @Model.UserName </h2>
            <p>Here's your activity overview for today, @DateTime.Now.ToString("dddd, MMMM d, yyyy")</p>
        </div>
        <!-- Top Centers Chart -->
        <div class="chart-section">
            <h2 style="color: var(--clr-text-primary)">Top Centers by Reservations</h2>
            <div class="chart-container" style="height:400px;">
                <canvas id="topCentersChart"></canvas>
            </div>
        </div>

        <!-- Room Occupancy Cards -->
        <div class="cards-section">
            <h2 style="color: var(--clr-text-primary)">Room Occupancy</h2>
            <div class="center-cards" id="centerCards">
                <!-- Cards will be populated from model data via JavaScript -->
            </div>
        </div>
    </div>
</div>

<style>
    .welcome-card {
        padding: 2rem;
        margin-bottom: 2rem;
        background-color: var(--clr-surface);
        border-radius: 1rem;
        border-left: 4px solid var(--clr-primary);
    }

        .welcome-card h2 {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
            color: var(--clr-text-primary)
        }

        .welcome-card p {
            color: var(--clr-text-secondary);
        }
    .dashboard-container {
        display: flex;
        flex-direction: column;
        gap: 30px;
        padding: 20px;
    }

    .chart-section, .cards-section {
        background: var(--clr-surface);
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        padding: 20px;
    }

    h2 {
        margin-top: 0;
        margin-bottom: 15px;
        color: #333;
        font-size: 20px;
    }

    .center-cards {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
    }

    .center-card {
        background: var(--clr-background);
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        padding: 20px;
        text-align: center;
        transition: transform 0.2s;
    }

        .center-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.15);
        }

    .center-name {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 15px;
        color: var(--clr-text-primary);
    }

    .occupancy-rate {
        font-size: 32px;
        font-weight: bold;
        margin: 10px 0;
    }

    .progress-bar {
        height: 12px;
        background-color: #eee;
        border-radius: 6px;
        margin: 15px 0;
        overflow: hidden;
    }

    .progress-fill {
        height: 100%;
        border-radius: 6px;
        transition: width 0.5s;
    }

    .room-counts {
        display: flex;
        justify-content: space-around;
        margin-top: 15px;
    }

    .room-count {
        text-align: center;
    }

    .count-value {
        font-size: 24px;
        font-weight: bold;
    }

    .count-label {
        font-size: 14px;
        color: #666;
    }

    /* Responsive adjustments */
    

    .chart-section {
        flex: 1;
    }

    .cards-section {
        flex: 1;
    }

    }
</style>